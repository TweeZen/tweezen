apiVersion: v1
kind: Service
metadata:
  labels:
    app: redis
  name: redis-master
spec:
  ports:
  - port: 6379
    protocol: TCP
    targetPort: 6379
  selector:
    app: redis
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: redis
  name: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - image: eu.gcr.io/unique-iterator-259210/redis-master
        imagePullPolicy: Always
        name: redis-master-sha256
        args: ["--appendonly", "yes", "--save", "60", "1"]
        volumeMounts:
          - name: redis-volume
            mountPath: /data
      volumes:
      - name: redis-volume
        gcePersistentDisk:
          pdName: redis-disk
          fsType: ext4
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: app
  name: app-service
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: app
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: app
  name: app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app
  template:
    metadata:
      labels:
        app: app
    spec:
      containers:
      - image: eu.gcr.io/unique-iterator-259210/tweezen:#{BUILD_ID}#
        imagePullPolicy: Always
        name: tweezen-sha256
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /tweezen
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 20
          periodSeconds: 2
          successThreshold: 1
          timeoutSeconds: 1
      initContainers:
      - name: init-redis
        image: busybox
        command: ['sh', '-c', 'until nslookup redis-master; do echo waiting for redis; sleep 2; done;']
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate